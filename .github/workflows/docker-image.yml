name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  build_push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: acrmanisha.azurecr.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      # - run: |
      #     docker build . -t acrmanisha.azurecr.io/java:${{ github.sha }}
      #     docker push acrmanisha.azurecr.io/java:${{ github.sha }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: acrmanisha.azurecr.io/java
      
      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
         
      - name: Set AKS context
        id: set-context
        uses: azure/aks-set-context@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          resource-group: Manisha 
          cluster-name: aksmanisha

      - name: create secret in kubernetes    
        uses: Azure/k8s-create-secret@v1
        with:
          container-registry-url: acrmanisha.azurecr.io
          container-registry-username: ${{ secrets.DOCKERHUB_USERNAME }}
          container-registry-password: ${{ secrets.DOCKERHUB_PASSWORD }}
          secret-name: k8s-secret
          
      - name: Deploy to AKS
        id: deploy-aks
        uses: Azure/k8s-deploy@v4
        with:
          namespace: 'default'
          manifests: |
             manifests/deployment.yml
             manifests/service.yml
          images: '${{ secrets.DOCKERHUB_USERNAME }}.azurecr.io/java:${{ steps.meta.outputs.tags }}'
          pull-images: false 
